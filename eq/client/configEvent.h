
/* Copyright (c) 2006-2011, Stefan Eilemann <eile@equalizergraphics.com>
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License version 2.1 as published
 * by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#ifndef EQ_CONFIGEVENT_H
#define EQ_CONFIGEVENT_H

#include <eq/client/event.h>   // member

namespace eq
{
    /**
     * @deprecated
     * A config event.
     *
     * Config events are generated by the event processing functions on the
     * render nodes and send to the config thread in the application process
     * using Config::sendEvent(). The config processes events at the end of the
     * frame, either non-blocking or blocking (event-driven). Config events are
     * typically application-specific. The events defined below are for the
     * default implementation, which sends the window system events mostly
     * unprocessed to the application.
     *
     * The eqPixelBench example provides a sample implementation on how to
     * create application-specific events.
     *
     * When subclassing, make sure to set the packet size to the total size of
     * the event structure.
     */
    struct ConfigEvent
    {
    public:
        ConfigEvent()
            {
                size = sizeof( ConfigEvent );
            }

        Event data; //!< the Event @version 1.0
        uint64_t size;
    };

    /** Print the config event to the given output stream. @version 1.0 */
    EQ_API std::ostream& operator << ( std::ostream& os,
                                       const ConfigEvent* event );
}

#endif // EQ_CONFIGEVENT_H

